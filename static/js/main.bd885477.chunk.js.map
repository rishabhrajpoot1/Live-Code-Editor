{"version":3,"sources":["components/CodeEditor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["CodeEditor","props","language","name","value","onChange","useState","open","setOpen","className","onClick","prevOpen","class","onBeforeChange","editor","data","options","line","lineWrapping","mode","lineNumbers","theme","useLocalStorage","key","prefixedKey","jsonValue","localStorage","getItem","setValue","useEffect","setItem","App","html","setHtml","css","setCss","javascript","setJavascript","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","frameBorder","width","sandbox","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA8CeA,MArCf,SAAoBC,GACf,IAAOC,EAAoCD,EAApCC,SAAUC,EAA0BF,EAA1BE,KAAMC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAE/B,EAAyBC,oBAAS,GAAlC,mBAAQC,EAAR,KAAcC,EAAd,KAOI,OACA,sBAAKC,UAAS,oCAA+BF,EAAO,SAAW,IAA/D,UAEY,yBAAQE,UAAU,mDAAlB,UACI,oBAAIA,UAAU,gBAAd,SAA+BN,GAAQ,SACvC,wBAASO,QAAS,kBAAIF,GAAQ,SAAAG,GAAQ,OAAGA,MAAzC,SAAsDJ,EAAO,mBAAGK,MAAM,wBAA4B,mBAAGA,MAAM,2BAG/G,cAAC,aAAD,CACIH,UAAU,SACVI,eAfnB,SAAsBC,EAAQC,EAAMX,GAChCC,EAASD,IAeMA,MAAOA,EACPY,QAAS,CACLC,MAAK,EACLC,cAAa,EACbC,KAAKjB,EACLkB,aAAY,EACZC,MAAO,kBCVpBC,MAtBf,SAAyBC,GACrB,IAAMC,EAHK,eAGkBD,EAY7B,EAA0BjB,oBAVV,WACZ,IAAMmB,EAAYC,aAAaC,QAAQH,GAEvC,OAAKC,GACM,MAMf,mBAAOrB,EAAP,KAAcwB,EAAd,KAMA,OAJAC,qBAAU,WACNH,aAAaI,QAAQN,EAAapB,KACpC,CAACoB,EAAapB,IAET,CAACA,EAAOwB,ICmCJG,MArDf,WACQ,MAAwBT,EAAgB,QAAxC,mBAAOU,EAAP,KAAaC,EAAb,KACA,EAAuBX,EAAgB,OAAvC,mBAAOY,EAAP,KAAYC,EAAZ,KACA,EAAoCb,EAAgB,cAApD,mBAAOc,EAAP,KAAmBC,EAAnB,KACA,EAA4B/B,mBAAS,IAArC,mBAAOgC,EAAP,KAAeC,EAAf,KA8BA,OA3BAV,qBAAU,WACN,IAAMW,EAASC,YAAW,WAEtBF,EAAU,sEAAD,OAKbL,EALa,kFASXF,EATW,4CAWbI,EAXa,2EAiBV,KAEH,OAAO,kBAAIM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAIR,qCACH,sBAAK3B,UAAU,aAAf,UACC,cAAC,EAAD,CAAYP,SAAS,MAAMC,KAAK,OAAOC,MAAO4B,EAAM3B,SAAU4B,IAC9D,cAAC,EAAD,CAAY/B,SAAS,MAAMC,KAAK,MAAMC,MAAO8B,EAAK7B,SAAU8B,IAC5D,cAAC,EAAD,CAAYjC,SAAS,aAAaC,KAAK,KAAKC,MAAOgC,EAAY/B,SAAUgC,OAE1E,qBAAK5B,UAAU,SAAf,SACI,wBACA6B,OAAQA,EACPK,MAAM,SACNC,YAAY,IACZC,MAAM,OACNC,QAAQ,wBC9CzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bd885477.chunk.js","sourcesContent":["import React , {useState}from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport {Controlled as ControlledEditor} from 'react-codemirror2';\n\n\nfunction CodeEditor(props){\n     const {language, name, value, onChange } = props\n \n    const  [open, setOpen] = useState(true);\n\n     function handleChange(editor, data, value){\n         onChange(value);\n\n     }\n\n        return(\n        <div className={`snippet .editor-container ${open ? 'expand' : ''}`}>\n\n                    <header className='snippet-header flex justify-between align-center'>\n                        <h2 className='snippet-title'>{name || 'HTML'}</h2>\n                        <button  onClick={()=>setOpen(prevOpen=>!prevOpen)} >{open ? <i class=\"fas fa-compress-alt\"></i>: <i class=\"fas fa-expand-alt\"></i>}</button>\n                    </header>\n\n                    <ControlledEditor \n                        className='editor'\n                        onBeforeChange={handleChange}\n                        value={value}\n                        options={{\n                            line:true,\n                            lineWrapping:true,\n                            mode:language,\n                            lineNumbers:true,\n                            theme: 'material'\n                        }}\n                    />\n                    \n            </div>\n        );\n\n}\n\n\nexport default CodeEditor;","import { useEffect, useState } from \"react\";\n\nconst PREFIX = 'code-editor-';\n\nfunction useLocalStorage(key){\n    const prefixedKey = PREFIX + key;\n    \n    const getData = () => {\n        const jsonValue = localStorage.getItem(prefixedKey)\n\n        if( !jsonValue){\n            return \"\";\n        }\n        \n        return  jsonValue;\n    }\n\n    const [value, setValue] = useState(getData)\n\n    useEffect(()=>{\n        localStorage.setItem(prefixedKey, value);\n    },[prefixedKey, value])\n\n    return [value, setValue]\n}\n\nexport default useLocalStorage;","import React, {useState, useEffect} from 'react';\n\nimport CodeEditor from './CodeEditor';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nfunction App (){\n        const [html, setHtml] = useLocalStorage('html');\n        const [css, setCss] =  useLocalStorage('css');\n        const [javascript, setJavascript] = useLocalStorage('javacsript');\n        const [srcDoc, setSrcDoc] = useState('');\n\n\n        useEffect(()=>{\n            const timeout =setTimeout(()=>{\n\n                setSrcDoc(\n                    `\n          <html>\n          <head>\n          <style>\n          ${css}\n          </style>\n          </head>\n          <body>\n            ${html}\n          <script> \n          ${javascript}\n          </script\n          </body>\n          </html>\n        `\n                );\n            }, 500)\n\n            return ()=>clearTimeout(timeout)\n        }, [html, css, javascript])\n    \n      \n\n        return(<>\n            <div className='input flex'>\n             <CodeEditor language='xml' name='HTML' value={html} onChange={setHtml}/>\n             <CodeEditor language='css' name='CSS' value={css} onChange={setCss}/>\n             <CodeEditor language='javacsript' name='JS' value={javascript} onChange={setJavascript}/>\n            </div>\n            <div className='output'>\n                <iframe \n                srcDoc={srcDoc}\n                 title='output'\n                 frameBorder='0'\n                 width='100%'\n                 sandbox='allow-scripts'\n                />\n            </div>\n        </>);\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/style.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}